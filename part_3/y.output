Terminals unused in grammar

   PLUS
   UMINUS


Grammar

    0 $accept: program $end

    1 program: function-block

    2 function-block: %empty
    3               | function function-block

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    5 declaration-block-optional: %empty
    6                           | declaration-block

    7 declaration-block: declaration SEMICOLON
    8                  | declaration SEMICOLON declaration-block

    9 statement-block-optional: %empty
   10                         | statement-block

   11 statement-block: statement SEMICOLON
   12                | statement SEMICOLON statement-block

   13 declaration: identifier-block COLON declaration-type

   14 declaration-type: INTEGER
   15                 | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   16 identifier-block: identifier
   17                 | identifier COMMA identifier-block

   18 identifier: IDENT

   19 statement: var ASSIGN expression
   20          | IF bool-expr THEN statement-block ENDIF
   21          | IF bool-expr THEN statement-block ELSE statement-block ENDIF
   22          | WHILE bool-expr BEGINLOOP statement-block ENDLOOP
   23          | DO BEGINLOOP statement-block ENDLOOP WHILE bool-expr
   24          | READ var-block
   25          | WRITE var-block
   26          | BREAK
   27          | RETURN expression

   28 bool-expr: relation-and-expr
   29          | relation-and-expr OR bool-expr

   30 relation-and-expr: relation-expr
   31                  | relation-expr AND relation-and-expr

   32 relation-expr: relation-expr-body
   33              | NOT relation-expr-body

   34 relation-expr-body: expression comp expression
   35                   | TRUE
   36                   | FALSE
   37                   | L_PAREN bool-expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative-expr
   45           | multiplicative-expr ADD expression
   46           | multiplicative-expr SUB expression

   47 multiplicative-expr: term
   48                    | term MULT multiplicative-expr
   49                    | term DIV multiplicative-expr
   50                    | term MOD multiplicative-expr

   51 term: term-body
   52     | MINUS term-body
   53     | IDENT L_PAREN expression-block R_PAREN

   54 term-body: NUMBER
   55          | var
   56          | L_PAREN expression R_PAREN

   57 expression-block: expression
   58                 | expression COMMA expression-block

   59 var-block: var
   60          | var COMMA var-block

   61 var: identifier
   62    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
IF (259) 20 21
ELSE (260) 21
THEN (261) 20 21
RETURN (262) 27
ENDIF (263) 20 21
WHILE (264) 22 23
DO (265) 23
BEGINLOOP (266) 22 23
ENDLOOP (267) 22 23
BREAK (268) 26
ARRAY (269) 15
OF (270) 15
BEGIN_PARAMS (271) 4
END_PARAMS (272) 4
BEGIN_LOCALS (273) 4
END_LOCALS (274) 4
BEGIN_BODY (275) 4
END_BODY (276) 4
INTEGER (277) 14 15
READ (278) 24
WRITE (279) 25
ASSIGN (280) 19
COMMA (281) 17 58 60
SEMICOLON (282) 4 7 8 11 12
COLON (283) 13
LTE (284) 42
GTE (285) 43
LT (286) 40
GT (287) 41
SUB (288) 46
ADD (289) 45
MULT (290) 48
DIV (291) 49
MOD (292) 50
EQ (293) 38
NEQ (294) 39
L_PAREN (295) 37 53 56
R_PAREN (296) 37 53 56
L_SQUARE_BRACKET (297) 15 62
R_SQUARE_BRACKET (298) 15 62
TRUE (299) 35
FALSE (300) 36
AND (301) 31
OR (302) 29
NOT (303) 33
IDENT (304) 18 53
NUMBER (305) 15 54
PLUS (306)
MINUS (307) 52
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
function-block (56)
    on left: 2 3, on right: 1 3
function (57)
    on left: 4, on right: 3
declaration-block-optional (58)
    on left: 5 6, on right: 4
declaration-block (59)
    on left: 7 8, on right: 6 8
statement-block-optional (60)
    on left: 9 10, on right: 4
statement-block (61)
    on left: 11 12, on right: 10 12 20 21 22 23
declaration (62)
    on left: 13, on right: 7 8
declaration-type (63)
    on left: 14 15, on right: 13
identifier-block (64)
    on left: 16 17, on right: 13 17
identifier (65)
    on left: 18, on right: 4 16 17 61 62
statement (66)
    on left: 19 20 21 22 23 24 25 26 27, on right: 11 12
bool-expr (67)
    on left: 28 29, on right: 20 21 22 23 29 37
relation-and-expr (68)
    on left: 30 31, on right: 28 29 31
relation-expr (69)
    on left: 32 33, on right: 30 31
relation-expr-body (70)
    on left: 34 35 36 37, on right: 32 33
comp (71)
    on left: 38 39 40 41 42 43, on right: 34
expression (72)
    on left: 44 45 46, on right: 19 27 34 45 46 56 57 58 62
multiplicative-expr (73)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (74)
    on left: 51 52 53, on right: 47 48 49 50
term-body (75)
    on left: 54 55 56, on right: 51 52
expression-block (76)
    on left: 57 58, on right: 53 58
var-block (77)
    on left: 59 60, on right: 24 25 60
var (78)
    on left: 61 62, on right: 19 55 59 60


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    program         go to state 2
    function-block  go to state 3
    function        go to state 4


State 1

    4 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: function-block .

    $default  reduce using rule 1 (program)


State 4

    3 function-block: function . function-block

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    function-block  go to state 8
    function        go to state 4


State 5

   18 identifier: IDENT .

    $default  reduce using rule 18 (identifier)


State 6

    4 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 function-block: function function-block .

    $default  reduce using rule 3 (function-block)


State 9

    4 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 11
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 11

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional . END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declaration-block-optional: declaration-block .

    $default  reduce using rule 6 (declaration-block-optional)


State 13

    7 declaration-block: declaration . SEMICOLON
    8                  | declaration . SEMICOLON declaration-block

    SEMICOLON  shift, and go to state 17


State 14

   13 declaration: identifier-block . COLON declaration-type

    COLON  shift, and go to state 18


State 15

   16 identifier-block: identifier .
   17                 | identifier . COMMA identifier-block

    COMMA  shift, and go to state 19

    $default  reduce using rule 16 (identifier-block)


State 16

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS . BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declaration-block: declaration SEMICOLON .
    8                  | declaration SEMICOLON . declaration-block

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (declaration-block)

    declaration-block  go to state 21
    declaration        go to state 13
    identifier-block   go to state 14
    identifier         go to state 15


State 18

   13 declaration: identifier-block COLON . declaration-type

    ARRAY    shift, and go to state 22
    INTEGER  shift, and go to state 23

    declaration-type  go to state 24


State 19

   17 identifier-block: identifier COMMA . identifier-block

    IDENT  shift, and go to state 5

    identifier-block  go to state 25
    identifier        go to state 15


State 20

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS . declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 26
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 21

    8 declaration-block: declaration SEMICOLON declaration-block .

    $default  reduce using rule 8 (declaration-block)


State 22

   15 declaration-type: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 23

   14 declaration-type: INTEGER .

    $default  reduce using rule 14 (declaration-type)


State 24

   13 declaration: identifier-block COLON declaration-type .

    $default  reduce using rule 13 (declaration)


State 25

   17 identifier-block: identifier COMMA identifier-block .

    $default  reduce using rule 17 (identifier-block)


State 26

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional . END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   15 declaration-type: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS . BEGIN_BODY statement-block-optional END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   15 declaration-type: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY . statement-block-optional END_BODY

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    $default  reduce using rule 9 (statement-block-optional)

    statement-block-optional  go to state 39
    statement-block           go to state 40
    identifier                go to state 41
    statement                 go to state 42
    var                       go to state 43


State 31

   15 declaration-type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 32

   20 statement: IF . bool-expr THEN statement-block ENDIF
   21          | IF . bool-expr THEN statement-block ELSE statement-block ENDIF

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    bool-expr            go to state 52
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 33

   27 statement: RETURN . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 62
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 34

   22 statement: WHILE . bool-expr BEGINLOOP statement-block ENDLOOP

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    bool-expr            go to state 63
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 35

   23 statement: DO . BEGINLOOP statement-block ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 64


State 36

   26 statement: BREAK .

    $default  reduce using rule 26 (statement)


State 37

   24 statement: READ . var-block

    IDENT  shift, and go to state 5

    identifier  go to state 41
    var-block   go to state 65
    var         go to state 66


State 38

   25 statement: WRITE . var-block

    IDENT  shift, and go to state 5

    identifier  go to state 41
    var-block   go to state 67
    var         go to state 66


State 39

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional . END_BODY

    END_BODY  shift, and go to state 68


State 40

   10 statement-block-optional: statement-block .

    $default  reduce using rule 10 (statement-block-optional)


State 41

   61 var: identifier .
   62    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 61 (var)


State 42

   11 statement-block: statement . SEMICOLON
   12                | statement . SEMICOLON statement-block

    SEMICOLON  shift, and go to state 70


State 43

   19 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 44

   15 declaration-type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   37 relation-expr-body: L_PAREN . bool-expr R_PAREN
   56 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    bool-expr            go to state 73
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 74
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 46

   35 relation-expr-body: TRUE .

    $default  reduce using rule 35 (relation-expr-body)


State 47

   36 relation-expr-body: FALSE .

    $default  reduce using rule 36 (relation-expr-body)


State 48

   33 relation-expr: NOT . relation-expr-body

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    relation-expr-body   go to state 75
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 49

   18 identifier: IDENT .
   53 term: IDENT . L_PAREN expression-block R_PAREN

    L_PAREN  shift, and go to state 76

    $default  reduce using rule 18 (identifier)


State 50

   54 term-body: NUMBER .

    $default  reduce using rule 54 (term-body)


State 51

   52 term: MINUS . term-body

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50

    identifier  go to state 41
    term-body   go to state 77
    var         go to state 60


State 52

   20 statement: IF bool-expr . THEN statement-block ENDIF
   21          | IF bool-expr . THEN statement-block ELSE statement-block ENDIF

    THEN  shift, and go to state 78


State 53

   28 bool-expr: relation-and-expr .
   29          | relation-and-expr . OR bool-expr

    OR  shift, and go to state 79

    $default  reduce using rule 28 (bool-expr)


State 54

   30 relation-and-expr: relation-expr .
   31                  | relation-expr . AND relation-and-expr

    AND  shift, and go to state 80

    $default  reduce using rule 30 (relation-and-expr)


State 55

   32 relation-expr: relation-expr-body .

    $default  reduce using rule 32 (relation-expr)


State 56

   34 relation-expr-body: expression . comp expression

    LTE  shift, and go to state 81
    GTE  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86

    comp  go to state 87


State 57

   44 expression: multiplicative-expr .
   45           | multiplicative-expr . ADD expression
   46           | multiplicative-expr . SUB expression

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 44 (expression)


State 58

   47 multiplicative-expr: term .
   48                    | term . MULT multiplicative-expr
   49                    | term . DIV multiplicative-expr
   50                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 47 (multiplicative-expr)


State 59

   51 term: term-body .

    $default  reduce using rule 51 (term)


State 60

   55 term-body: var .

    $default  reduce using rule 55 (term-body)


State 61

   56 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 93
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 62

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 63

   22 statement: WHILE bool-expr . BEGINLOOP statement-block ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 64

   23 statement: DO BEGINLOOP . statement-block ENDLOOP WHILE bool-expr

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    statement-block  go to state 95
    identifier       go to state 41
    statement        go to state 42
    var              go to state 43


State 65

   24 statement: READ var-block .

    $default  reduce using rule 24 (statement)


State 66

   59 var-block: var .
   60          | var . COMMA var-block

    COMMA  shift, and go to state 96

    $default  reduce using rule 59 (var-block)


State 67

   25 statement: WRITE var-block .

    $default  reduce using rule 25 (statement)


State 68

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY .

    $default  reduce using rule 4 (function)


State 69

   62 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 97
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 70

   11 statement-block: statement SEMICOLON .
   12                | statement SEMICOLON . statement-block

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    $default  reduce using rule 11 (statement-block)

    statement-block  go to state 98
    identifier       go to state 41
    statement        go to state 42
    var              go to state 43


State 71

   19 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 99
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 72

   15 declaration-type: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (declaration-type)


State 73

   37 relation-expr-body: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 100


State 74

   34 relation-expr-body: expression . comp expression
   56 term-body: L_PAREN expression . R_PAREN

    LTE      shift, and go to state 81
    GTE      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    R_PAREN  shift, and go to state 101

    comp  go to state 87


State 75

   33 relation-expr: NOT relation-expr-body .

    $default  reduce using rule 33 (relation-expr)


State 76

   53 term: IDENT L_PAREN . expression-block R_PAREN

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 102
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    expression-block     go to state 103
    var                  go to state 60


State 77

   52 term: MINUS term-body .

    $default  reduce using rule 52 (term)


State 78

   20 statement: IF bool-expr THEN . statement-block ENDIF
   21          | IF bool-expr THEN . statement-block ELSE statement-block ENDIF

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    statement-block  go to state 104
    identifier       go to state 41
    statement        go to state 42
    var              go to state 43


State 79

   29 bool-expr: relation-and-expr OR . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    bool-expr            go to state 105
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 80

   31 relation-and-expr: relation-expr AND . relation-and-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    relation-and-expr    go to state 106
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 81

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 82

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 83

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 84

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 85

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 86

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 87

   34 relation-expr-body: expression comp . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 107
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 88

   46 expression: multiplicative-expr SUB . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 108
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 89

   45 expression: multiplicative-expr ADD . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 109
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 90

   48 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    multiplicative-expr  go to state 110
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 91

   49 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    multiplicative-expr  go to state 111
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 92

   50 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    multiplicative-expr  go to state 112
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 93

   56 term-body: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101


State 94

   22 statement: WHILE bool-expr BEGINLOOP . statement-block ENDLOOP

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    statement-block  go to state 113
    identifier       go to state 41
    statement        go to state 42
    var              go to state 43


State 95

   23 statement: DO BEGINLOOP statement-block . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 114


State 96

   60 var-block: var COMMA . var-block

    IDENT  shift, and go to state 5

    identifier  go to state 41
    var-block   go to state 115
    var         go to state 66


State 97

   62 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116


State 98

   12 statement-block: statement SEMICOLON statement-block .

    $default  reduce using rule 12 (statement-block)


State 99

   19 statement: var ASSIGN expression .

    $default  reduce using rule 19 (statement)


State 100

   37 relation-expr-body: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 37 (relation-expr-body)


State 101

   56 term-body: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term-body)


State 102

   57 expression-block: expression .
   58                 | expression . COMMA expression-block

    COMMA  shift, and go to state 117

    $default  reduce using rule 57 (expression-block)


State 103

   53 term: IDENT L_PAREN expression-block . R_PAREN

    R_PAREN  shift, and go to state 118


State 104

   20 statement: IF bool-expr THEN statement-block . ENDIF
   21          | IF bool-expr THEN statement-block . ELSE statement-block ENDIF

    ELSE   shift, and go to state 119
    ENDIF  shift, and go to state 120


State 105

   29 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 29 (bool-expr)


State 106

   31 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 31 (relation-and-expr)


State 107

   34 relation-expr-body: expression comp expression .

    $default  reduce using rule 34 (relation-expr-body)


State 108

   46 expression: multiplicative-expr SUB expression .

    $default  reduce using rule 46 (expression)


State 109

   45 expression: multiplicative-expr ADD expression .

    $default  reduce using rule 45 (expression)


State 110

   48 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 48 (multiplicative-expr)


State 111

   49 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 49 (multiplicative-expr)


State 112

   50 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 50 (multiplicative-expr)


State 113

   22 statement: WHILE bool-expr BEGINLOOP statement-block . ENDLOOP

    ENDLOOP  shift, and go to state 121


State 114

   23 statement: DO BEGINLOOP statement-block ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 122


State 115

   60 var-block: var COMMA var-block .

    $default  reduce using rule 60 (var-block)


State 116

   62 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 117

   58 expression-block: expression COMMA . expression-block

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    expression           go to state 102
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    expression-block     go to state 123
    var                  go to state 60


State 118

   53 term: IDENT L_PAREN expression-block R_PAREN .

    $default  reduce using rule 53 (term)


State 119

   21 statement: IF bool-expr THEN statement-block ELSE . statement-block ENDIF

    IF      shift, and go to state 32
    RETURN  shift, and go to state 33
    WHILE   shift, and go to state 34
    DO      shift, and go to state 35
    BREAK   shift, and go to state 36
    READ    shift, and go to state 37
    WRITE   shift, and go to state 38
    IDENT   shift, and go to state 5

    statement-block  go to state 124
    identifier       go to state 41
    statement        go to state 42
    var              go to state 43


State 120

   20 statement: IF bool-expr THEN statement-block ENDIF .

    $default  reduce using rule 20 (statement)


State 121

   22 statement: WHILE bool-expr BEGINLOOP statement-block ENDLOOP .

    $default  reduce using rule 22 (statement)


State 122

   23 statement: DO BEGINLOOP statement-block ENDLOOP WHILE . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    identifier           go to state 41
    bool-expr            go to state 125
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    var                  go to state 60


State 123

   58 expression-block: expression COMMA expression-block .

    $default  reduce using rule 58 (expression-block)


State 124

   21 statement: IF bool-expr THEN statement-block ELSE statement-block . ENDIF

    ENDIF  shift, and go to state 126


State 125

   23 statement: DO BEGINLOOP statement-block ENDLOOP WHILE bool-expr .

    $default  reduce using rule 23 (statement)


State 126

   21 statement: IF bool-expr THEN statement-block ELSE statement-block ENDIF .

    $default  reduce using rule 21 (statement)
