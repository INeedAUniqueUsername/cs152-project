Terminals unused in grammar

   PLUS
   UMINUS


Grammar

    0 $accept: program $end

    1 program: function-block

    2 function-block: %empty
    3               | function function-block

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    5 declaration-block-optional: %empty
    6                           | declaration-block

    7 declaration-block: declaration SEMICOLON
    8                  | declaration SEMICOLON declaration-block

    9 statement-block-optional: %empty
   10                         | statement-block

   11 statement-block: statement SEMICOLON
   12                | statement SEMICOLON statement-block

   13 loop-statement-block: statement SEMICOLON
   14                     | statement SEMICOLON statement-block
   15                     | BREAK SEMICOLON
   16                     | BREAK SEMICOLON statement-block

   17 declaration: identifier-block COLON INTEGER
   18            | identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   19 identifier-block: identifier
   20                 | identifier COMMA identifier-block

   21 identifier: IDENT

   22 statement: IDENT ASSIGN expression
   23          | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression
   24          | IF bool-expr THEN statement-block ENDIF
   25          | IF bool-expr THEN statement-block ELSE statement-block ENDIF
   26          | WHILE bool-expr BEGINLOOP loop-statement-block ENDLOOP
   27          | DO BEGINLOOP loop-statement-block ENDLOOP WHILE bool-expr
   28          | read-block
   29          | write-block
   30          | RETURN expression

   31 read-block: READ IDENT
   32           | READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   33           | read-block IDENT
   34           | read-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   35 write-block: WRITE IDENT
   36            | WRITE IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   37            | write-block IDENT
   38            | write-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   39 bool-expr: relation-and-expr
   40          | relation-and-expr OR bool-expr

   41 relation-and-expr: relation-expr
   42                  | relation-expr AND relation-and-expr

   43 relation-expr: relation-expr-body
   44              | NOT relation-expr-body

   45 relation-expr-body: expression comp expression
   46                   | TRUE
   47                   | FALSE
   48                   | L_PAREN bool-expr R_PAREN

   49 comp: EQ
   50     | NEQ
   51     | LT
   52     | GT
   53     | LTE
   54     | GTE

   55 expression: multiplicative-expr
   56           | multiplicative-expr ADD expression
   57           | multiplicative-expr SUB expression

   58 multiplicative-expr: term
   59                    | term MULT multiplicative-expr
   60                    | term DIV multiplicative-expr
   61                    | term MOD multiplicative-expr

   62 term: term-body
   63     | MINUS term-body
   64     | IDENT L_PAREN function-args R_PAREN

   65 term-body: NUMBER
   66          | IDENT
   67          | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   68          | L_PAREN expression R_PAREN

   69 function-args: expression
   70              | expression COMMA function-args


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
IF (259) 24 25
ELSE (260) 25
THEN (261) 24 25
RETURN (262) 30
ENDIF (263) 24 25
WHILE (264) 26 27
DO (265) 27
BEGINLOOP (266) 26 27
ENDLOOP (267) 26 27
BREAK (268) 15 16
ARRAY (269) 18
OF (270) 18
BEGIN_PARAMS (271) 4
END_PARAMS (272) 4
BEGIN_LOCALS (273) 4
END_LOCALS (274) 4
BEGIN_BODY (275) 4
END_BODY (276) 4
INTEGER (277) 17 18
READ (278) 31 32
WRITE (279) 35 36
ASSIGN (280) 22 23
COMMA (281) 20 70
SEMICOLON (282) 4 7 8 11 12 13 14 15 16
COLON (283) 17 18
LTE (284) 53
GTE (285) 54
LT (286) 51
GT (287) 52
SUB (288) 57
ADD (289) 56
MULT (290) 59
DIV (291) 60
MOD (292) 61
EQ (293) 49
NEQ (294) 50
L_PAREN (295) 48 64 68
R_PAREN (296) 48 64 68
L_SQUARE_BRACKET (297) 18 23 32 34 36 38 67
R_SQUARE_BRACKET (298) 18 23 32 34 36 38 67
TRUE (299) 46
FALSE (300) 47
AND (301) 42
OR (302) 40
NOT (303) 44
IDENT (304) 4 21 22 31 32 33 34 35 36 37 38 64 66 67
NUMBER (305) 18 65
PLUS (306)
MINUS (307) 63
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
function-block (56)
    on left: 2 3, on right: 1 3
function (57)
    on left: 4, on right: 3
declaration-block-optional (58)
    on left: 5 6, on right: 4
declaration-block (59)
    on left: 7 8, on right: 6 8
statement-block-optional (60)
    on left: 9 10, on right: 4
statement-block (61)
    on left: 11 12, on right: 10 12 14 16 24 25
loop-statement-block (62)
    on left: 13 14 15 16, on right: 26 27
declaration (63)
    on left: 17 18, on right: 7 8
identifier-block (64)
    on left: 19 20, on right: 17 18 20
identifier (65)
    on left: 21, on right: 19 20 23
statement (66)
    on left: 22 23 24 25 26 27 28 29 30, on right: 11 12 13 14
read-block (67)
    on left: 31 32 33 34, on right: 28 33 34
write-block (68)
    on left: 35 36 37 38, on right: 29 37 38
bool-expr (69)
    on left: 39 40, on right: 24 25 26 27 40 48
relation-and-expr (70)
    on left: 41 42, on right: 39 40 42
relation-expr (71)
    on left: 43 44, on right: 41 42
relation-expr-body (72)
    on left: 45 46 47 48, on right: 43 44
comp (73)
    on left: 49 50 51 52 53 54, on right: 45
expression (74)
    on left: 55 56 57, on right: 22 23 30 32 34 36 38 45 56 57 67 68
    69 70
multiplicative-expr (75)
    on left: 58 59 60 61, on right: 55 56 57 59 60 61
term (76)
    on left: 62 63 64, on right: 58 59 60 61
term-body (77)
    on left: 65 66 67 68, on right: 62 63
function-args (78)
    on left: 69 70, on right: 64 70


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    program         go to state 2
    function-block  go to state 3
    function        go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function-block .

    $default  reduce using rule 1 (program)


State 4

    3 function-block: function . function-block

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    function-block  go to state 7
    function        go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function-block: function function-block .

    $default  reduce using rule 3 (function-block)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 11
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 10

   21 identifier: IDENT .

    $default  reduce using rule 21 (identifier)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional . END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declaration-block-optional: declaration-block .

    $default  reduce using rule 6 (declaration-block-optional)


State 13

    7 declaration-block: declaration . SEMICOLON
    8                  | declaration . SEMICOLON declaration-block

    SEMICOLON  shift, and go to state 17


State 14

   17 declaration: identifier-block . COLON INTEGER
   18            | identifier-block . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

   19 identifier-block: identifier .
   20                 | identifier . COMMA identifier-block

    COMMA  shift, and go to state 19

    $default  reduce using rule 19 (identifier-block)


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS . BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declaration-block: declaration SEMICOLON .
    8                  | declaration SEMICOLON . declaration-block

    IDENT  shift, and go to state 10

    $default  reduce using rule 7 (declaration-block)

    declaration-block  go to state 21
    declaration        go to state 13
    identifier-block   go to state 14
    identifier         go to state 15


State 18

   17 declaration: identifier-block COLON . INTEGER
   18            | identifier-block COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY    shift, and go to state 22
    INTEGER  shift, and go to state 23


State 19

   20 identifier-block: identifier COMMA . identifier-block

    IDENT  shift, and go to state 10

    identifier-block  go to state 24
    identifier        go to state 15


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS . declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 25
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 21

    8 declaration-block: declaration SEMICOLON declaration-block .

    $default  reduce using rule 8 (declaration-block)


State 22

   18 declaration: identifier-block COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   17 declaration: identifier-block COLON INTEGER .

    $default  reduce using rule 17 (declaration)


State 24

   20 identifier-block: identifier COMMA identifier-block .

    $default  reduce using rule 20 (identifier-block)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional . END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   18 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS . BEGIN_BODY statement-block-optional END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   18 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY . statement-block-optional END_BODY

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    $default  reduce using rule 9 (statement-block-optional)

    statement-block-optional  go to state 38
    statement-block           go to state 39
    identifier                go to state 40
    statement                 go to state 41
    read-block                go to state 42
    write-block               go to state 43


State 30

   18 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 31

   24 statement: IF . bool-expr THEN statement-block ENDIF
   25          | IF . bool-expr THEN statement-block ELSE statement-block ENDIF

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 52
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 32

   30 statement: RETURN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 61
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 33

   26 statement: WHILE . bool-expr BEGINLOOP loop-statement-block ENDLOOP

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 62
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 34

   27 statement: DO . BEGINLOOP loop-statement-block ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 63


State 35

   31 read-block: READ . IDENT
   32           | READ . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 64


State 36

   35 write-block: WRITE . IDENT
   36            | WRITE . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 65


State 37

   21 identifier: IDENT .
   22 statement: IDENT . ASSIGN expression

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 21 (identifier)


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional . END_BODY

    END_BODY  shift, and go to state 67


State 39

   10 statement-block-optional: statement-block .

    $default  reduce using rule 10 (statement-block-optional)


State 40

   23 statement: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    L_SQUARE_BRACKET  shift, and go to state 68


State 41

   11 statement-block: statement . SEMICOLON
   12                | statement . SEMICOLON statement-block

    SEMICOLON  shift, and go to state 69


State 42

   28 statement: read-block .
   33 read-block: read-block . IDENT
   34           | read-block . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 70

    $default  reduce using rule 28 (statement)


State 43

   29 statement: write-block .
   37 write-block: write-block . IDENT
   38            | write-block . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 71

    $default  reduce using rule 29 (statement)


State 44

   18 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   48 relation-expr-body: L_PAREN . bool-expr R_PAREN
   68 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 73
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 74
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 46

   46 relation-expr-body: TRUE .

    $default  reduce using rule 46 (relation-expr-body)


State 47

   47 relation-expr-body: FALSE .

    $default  reduce using rule 47 (relation-expr-body)


State 48

   44 relation-expr: NOT . relation-expr-body

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    relation-expr-body   go to state 75
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 49

   64 term: IDENT . L_PAREN function-args R_PAREN
   66 term-body: IDENT .
   67          | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 66 (term-body)


State 50

   65 term-body: NUMBER .

    $default  reduce using rule 65 (term-body)


State 51

   63 term: MINUS . term-body

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 78
    NUMBER   shift, and go to state 50

    term-body  go to state 79


State 52

   24 statement: IF bool-expr . THEN statement-block ENDIF
   25          | IF bool-expr . THEN statement-block ELSE statement-block ENDIF

    THEN  shift, and go to state 80


State 53

   39 bool-expr: relation-and-expr .
   40          | relation-and-expr . OR bool-expr

    OR  shift, and go to state 81

    $default  reduce using rule 39 (bool-expr)


State 54

   41 relation-and-expr: relation-expr .
   42                  | relation-expr . AND relation-and-expr

    AND  shift, and go to state 82

    $default  reduce using rule 41 (relation-and-expr)


State 55

   43 relation-expr: relation-expr-body .

    $default  reduce using rule 43 (relation-expr)


State 56

   45 relation-expr-body: expression . comp expression

    LTE  shift, and go to state 83
    GTE  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88

    comp  go to state 89


State 57

   55 expression: multiplicative-expr .
   56           | multiplicative-expr . ADD expression
   57           | multiplicative-expr . SUB expression

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 55 (expression)


State 58

   58 multiplicative-expr: term .
   59                    | term . MULT multiplicative-expr
   60                    | term . DIV multiplicative-expr
   61                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 58 (multiplicative-expr)


State 59

   62 term: term-body .

    $default  reduce using rule 62 (term)


State 60

   68 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 95
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 61

   30 statement: RETURN expression .

    $default  reduce using rule 30 (statement)


State 62

   26 statement: WHILE bool-expr . BEGINLOOP loop-statement-block ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 63

   27 statement: DO BEGINLOOP . loop-statement-block ENDLOOP WHILE bool-expr

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 97
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    loop-statement-block  go to state 98
    identifier            go to state 40
    statement             go to state 99
    read-block            go to state 42
    write-block           go to state 43


State 64

   31 read-block: READ IDENT .
   32           | READ IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 100

    $default  reduce using rule 31 (read-block)


State 65

   35 write-block: WRITE IDENT .
   36            | WRITE IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 101

    $default  reduce using rule 35 (write-block)


State 66

   22 statement: IDENT ASSIGN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 102
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 67

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY .

    $default  reduce using rule 4 (function)


State 68

   23 statement: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 103
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 69

   11 statement-block: statement SEMICOLON .
   12                | statement SEMICOLON . statement-block

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    $default  reduce using rule 11 (statement-block)

    statement-block  go to state 104
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 70

   33 read-block: read-block IDENT .
   34           | read-block IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 105

    $default  reduce using rule 33 (read-block)


State 71

   37 write-block: write-block IDENT .
   38            | write-block IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 106

    $default  reduce using rule 37 (write-block)


State 72

   18 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 18 (declaration)


State 73

   48 relation-expr-body: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 107


State 74

   45 relation-expr-body: expression . comp expression
   68 term-body: L_PAREN expression . R_PAREN

    LTE      shift, and go to state 83
    GTE      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    R_PAREN  shift, and go to state 108

    comp  go to state 89


State 75

   44 relation-expr: NOT relation-expr-body .

    $default  reduce using rule 44 (relation-expr)


State 76

   64 term: IDENT L_PAREN . function-args R_PAREN

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 109
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    function-args        go to state 110


State 77

   67 term-body: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 111
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 78

   66 term-body: IDENT .
   67          | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 66 (term-body)


State 79

   63 term: MINUS term-body .

    $default  reduce using rule 63 (term)


State 80

   24 statement: IF bool-expr THEN . statement-block ENDIF
   25          | IF bool-expr THEN . statement-block ELSE statement-block ENDIF

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    statement-block  go to state 112
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 81

   40 bool-expr: relation-and-expr OR . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 113
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 82

   42 relation-and-expr: relation-expr AND . relation-and-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    relation-and-expr    go to state 114
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 83

   53 comp: LTE .

    $default  reduce using rule 53 (comp)


State 84

   54 comp: GTE .

    $default  reduce using rule 54 (comp)


State 85

   51 comp: LT .

    $default  reduce using rule 51 (comp)


State 86

   52 comp: GT .

    $default  reduce using rule 52 (comp)


State 87

   49 comp: EQ .

    $default  reduce using rule 49 (comp)


State 88

   50 comp: NEQ .

    $default  reduce using rule 50 (comp)


State 89

   45 relation-expr-body: expression comp . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 115
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 90

   57 expression: multiplicative-expr SUB . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 116
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 91

   56 expression: multiplicative-expr ADD . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 117
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 92

   59 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 118
    term                 go to state 58
    term-body            go to state 59


State 93

   60 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 119
    term                 go to state 58
    term-body            go to state 59


State 94

   61 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 120
    term                 go to state 58
    term-body            go to state 59


State 95

   68 term-body: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 96

   26 statement: WHILE bool-expr BEGINLOOP . loop-statement-block ENDLOOP

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 97
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    loop-statement-block  go to state 121
    identifier            go to state 40
    statement             go to state 99
    read-block            go to state 42
    write-block           go to state 43


State 97

   15 loop-statement-block: BREAK . SEMICOLON
   16                     | BREAK . SEMICOLON statement-block

    SEMICOLON  shift, and go to state 122


State 98

   27 statement: DO BEGINLOOP loop-statement-block . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 123


State 99

   13 loop-statement-block: statement . SEMICOLON
   14                     | statement . SEMICOLON statement-block

    SEMICOLON  shift, and go to state 124


State 100

   32 read-block: READ IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 125
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 101

   36 write-block: WRITE IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 126
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 102

   22 statement: IDENT ASSIGN expression .

    $default  reduce using rule 22 (statement)


State 103

   23 statement: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 127


State 104

   12 statement-block: statement SEMICOLON statement-block .

    $default  reduce using rule 12 (statement-block)


State 105

   34 read-block: read-block IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 128
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 106

   38 write-block: write-block IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 129
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 107

   48 relation-expr-body: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 48 (relation-expr-body)


State 108

   68 term-body: L_PAREN expression R_PAREN .

    $default  reduce using rule 68 (term-body)


State 109

   69 function-args: expression .
   70              | expression . COMMA function-args

    COMMA  shift, and go to state 130

    $default  reduce using rule 69 (function-args)


State 110

   64 term: IDENT L_PAREN function-args . R_PAREN

    R_PAREN  shift, and go to state 131


State 111

   67 term-body: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 132


State 112

   24 statement: IF bool-expr THEN statement-block . ENDIF
   25          | IF bool-expr THEN statement-block . ELSE statement-block ENDIF

    ELSE   shift, and go to state 133
    ENDIF  shift, and go to state 134


State 113

   40 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 40 (bool-expr)


State 114

   42 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 42 (relation-and-expr)


State 115

   45 relation-expr-body: expression comp expression .

    $default  reduce using rule 45 (relation-expr-body)


State 116

   57 expression: multiplicative-expr SUB expression .

    $default  reduce using rule 57 (expression)


State 117

   56 expression: multiplicative-expr ADD expression .

    $default  reduce using rule 56 (expression)


State 118

   59 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 59 (multiplicative-expr)


State 119

   60 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 60 (multiplicative-expr)


State 120

   61 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 61 (multiplicative-expr)


State 121

   26 statement: WHILE bool-expr BEGINLOOP loop-statement-block . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 122

   15 loop-statement-block: BREAK SEMICOLON .
   16                     | BREAK SEMICOLON . statement-block

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    $default  reduce using rule 15 (loop-statement-block)

    statement-block  go to state 136
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 123

   27 statement: DO BEGINLOOP loop-statement-block ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 137


State 124

   13 loop-statement-block: statement SEMICOLON .
   14                     | statement SEMICOLON . statement-block

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    $default  reduce using rule 13 (loop-statement-block)

    statement-block  go to state 138
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 125

   32 read-block: READ IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 139


State 126

   36 write-block: WRITE IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 140


State 127

   23 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 141


State 128

   34 read-block: read-block IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 142


State 129

   38 write-block: write-block IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 143


State 130

   70 function-args: expression COMMA . function-args

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 109
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    function-args        go to state 144


State 131

   64 term: IDENT L_PAREN function-args R_PAREN .

    $default  reduce using rule 64 (term)


State 132

   67 term-body: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 67 (term-body)


State 133

   25 statement: IF bool-expr THEN statement-block ELSE . statement-block ENDIF

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    READ    shift, and go to state 35
    WRITE   shift, and go to state 36
    IDENT   shift, and go to state 37

    statement-block  go to state 145
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 134

   24 statement: IF bool-expr THEN statement-block ENDIF .

    $default  reduce using rule 24 (statement)


State 135

   26 statement: WHILE bool-expr BEGINLOOP loop-statement-block ENDLOOP .

    $default  reduce using rule 26 (statement)


State 136

   16 loop-statement-block: BREAK SEMICOLON statement-block .

    $default  reduce using rule 16 (loop-statement-block)


State 137

   27 statement: DO BEGINLOOP loop-statement-block ENDLOOP WHILE . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 146
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 138

   14 loop-statement-block: statement SEMICOLON statement-block .

    $default  reduce using rule 14 (loop-statement-block)


State 139

   32 read-block: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 32 (read-block)


State 140

   36 write-block: WRITE IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 36 (write-block)


State 141

   23 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 147
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 142

   34 read-block: read-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 34 (read-block)


State 143

   38 write-block: write-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 38 (write-block)


State 144

   70 function-args: expression COMMA function-args .

    $default  reduce using rule 70 (function-args)


State 145

   25 statement: IF bool-expr THEN statement-block ELSE statement-block . ENDIF

    ENDIF  shift, and go to state 148


State 146

   27 statement: DO BEGINLOOP loop-statement-block ENDLOOP WHILE bool-expr .

    $default  reduce using rule 27 (statement)


State 147

   23 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 23 (statement)


State 148

   25 statement: IF bool-expr THEN statement-block ELSE statement-block ENDIF .

    $default  reduce using rule 25 (statement)
