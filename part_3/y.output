Terminals unused in grammar

   PLUS
   UMINUS


Grammar

    0 $accept: program $end

    1 program: function-block

    2 function-block: %empty
    3               | function function-block

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    5 declaration-block-optional: %empty
    6                           | declaration-block

    7 declaration-block: declaration SEMICOLON
    8                  | declaration SEMICOLON declaration-block

    9 statement-block-optional: %empty
   10                         | statement-block

   11 statement-block: statement SEMICOLON
   12                | statement SEMICOLON statement-block

   13 declaration: identifier-block COLON INTEGER
   14            | identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 identifier-block: identifier
   16                 | identifier COMMA identifier-block

   17 identifier: IDENT

   18 statement: identifier ASSIGN expression
   19          | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression
   20          | IF bool-expr THEN statement-block ENDIF
   21          | IF bool-expr THEN statement-block ELSE statement-block ENDIF
   22          | WHILE bool-expr BEGINLOOP statement-block ENDLOOP
   23          | DO BEGINLOOP statement-block ENDLOOP WHILE bool-expr
   24          | read-block
   25          | write-block
   26          | BREAK
   27          | RETURN expression

   28 read-block: READ IDENT
   29           | READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   30           | read-block IDENT
   31           | read-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   32 write-block: WRITE IDENT
   33            | WRITE IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   34            | write-block IDENT
   35            | write-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   36 bool-expr: relation-and-expr
   37          | relation-and-expr OR bool-expr

   38 relation-and-expr: relation-expr
   39                  | relation-expr AND relation-and-expr

   40 relation-expr: relation-expr-body
   41              | NOT relation-expr-body

   42 relation-expr-body: expression comp expression
   43                   | TRUE
   44                   | FALSE
   45                   | L_PAREN bool-expr R_PAREN

   46 comp: EQ
   47     | NEQ
   48     | LT
   49     | GT
   50     | LTE
   51     | GTE

   52 expression: multiplicative-expr
   53           | multiplicative-expr ADD expression
   54           | multiplicative-expr SUB expression

   55 multiplicative-expr: term
   56                    | term MULT multiplicative-expr
   57                    | term DIV multiplicative-expr
   58                    | term MOD multiplicative-expr

   59 term: term-body
   60     | MINUS term-body
   61     | IDENT L_PAREN function-args R_PAREN

   62 term-body: NUMBER
   63          | IDENT
   64          | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   65          | L_PAREN expression R_PAREN

   66 function-args: expression
   67              | expression COMMA function-args


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
IF (259) 20 21
ELSE (260) 21
THEN (261) 20 21
RETURN (262) 27
ENDIF (263) 20 21
WHILE (264) 22 23
DO (265) 23
BEGINLOOP (266) 22 23
ENDLOOP (267) 22 23
BREAK (268) 26
ARRAY (269) 14
OF (270) 14
BEGIN_PARAMS (271) 4
END_PARAMS (272) 4
BEGIN_LOCALS (273) 4
END_LOCALS (274) 4
BEGIN_BODY (275) 4
END_BODY (276) 4
INTEGER (277) 13 14
READ (278) 28 29
WRITE (279) 32 33
ASSIGN (280) 18 19
COMMA (281) 16 67
SEMICOLON (282) 4 7 8 11 12
COLON (283) 13 14
LTE (284) 50
GTE (285) 51
LT (286) 48
GT (287) 49
SUB (288) 54
ADD (289) 53
MULT (290) 56
DIV (291) 57
MOD (292) 58
EQ (293) 46
NEQ (294) 47
L_PAREN (295) 45 61 65
R_PAREN (296) 45 61 65
L_SQUARE_BRACKET (297) 14 19 29 31 33 35 64
R_SQUARE_BRACKET (298) 14 19 29 31 33 35 64
TRUE (299) 43
FALSE (300) 44
AND (301) 39
OR (302) 37
NOT (303) 41
IDENT (304) 4 17 28 29 30 31 32 33 34 35 61 63 64
NUMBER (305) 14 62
PLUS (306)
MINUS (307) 60
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
function-block (56)
    on left: 2 3, on right: 1 3
function (57)
    on left: 4, on right: 3
declaration-block-optional (58)
    on left: 5 6, on right: 4
declaration-block (59)
    on left: 7 8, on right: 6 8
statement-block-optional (60)
    on left: 9 10, on right: 4
statement-block (61)
    on left: 11 12, on right: 10 12 20 21 22 23
declaration (62)
    on left: 13 14, on right: 7 8
identifier-block (63)
    on left: 15 16, on right: 13 14 16
identifier (64)
    on left: 17, on right: 15 16 18 19
statement (65)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 11 12
read-block (66)
    on left: 28 29 30 31, on right: 24 30 31
write-block (67)
    on left: 32 33 34 35, on right: 25 34 35
bool-expr (68)
    on left: 36 37, on right: 20 21 22 23 37 45
relation-and-expr (69)
    on left: 38 39, on right: 36 37 39
relation-expr (70)
    on left: 40 41, on right: 38 39
relation-expr-body (71)
    on left: 42 43 44 45, on right: 40 41
comp (72)
    on left: 46 47 48 49 50 51, on right: 42
expression (73)
    on left: 52 53 54, on right: 18 19 27 29 31 33 35 42 53 54 64 65
    66 67
multiplicative-expr (74)
    on left: 55 56 57 58, on right: 52 53 54 56 57 58
term (75)
    on left: 59 60 61, on right: 55 56 57 58
term-body (76)
    on left: 62 63 64 65, on right: 59 60
function-args (77)
    on left: 66 67, on right: 61 67


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    program         go to state 2
    function-block  go to state 3
    function        go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function-block .

    $default  reduce using rule 1 (program)


State 4

    3 function-block: function . function-block

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function-block)

    function-block  go to state 7
    function        go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function-block: function function-block .

    $default  reduce using rule 3 (function-block)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 11
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 10

   17 identifier: IDENT .

    $default  reduce using rule 17 (identifier)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional . END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declaration-block-optional: declaration-block .

    $default  reduce using rule 6 (declaration-block-optional)


State 13

    7 declaration-block: declaration . SEMICOLON
    8                  | declaration . SEMICOLON declaration-block

    SEMICOLON  shift, and go to state 17


State 14

   13 declaration: identifier-block . COLON INTEGER
   14            | identifier-block . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

   15 identifier-block: identifier .
   16                 | identifier . COMMA identifier-block

    COMMA  shift, and go to state 19

    $default  reduce using rule 15 (identifier-block)


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS . BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declaration-block: declaration SEMICOLON .
    8                  | declaration SEMICOLON . declaration-block

    IDENT  shift, and go to state 10

    $default  reduce using rule 7 (declaration-block)

    declaration-block  go to state 21
    declaration        go to state 13
    identifier-block   go to state 14
    identifier         go to state 15


State 18

   13 declaration: identifier-block COLON . INTEGER
   14            | identifier-block COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY    shift, and go to state 22
    INTEGER  shift, and go to state 23


State 19

   16 identifier-block: identifier COMMA . identifier-block

    IDENT  shift, and go to state 10

    identifier-block  go to state 24
    identifier        go to state 15


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS . declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration-block-optional)

    declaration-block-optional  go to state 25
    declaration-block           go to state 12
    declaration                 go to state 13
    identifier-block            go to state 14
    identifier                  go to state 15


State 21

    8 declaration-block: declaration SEMICOLON declaration-block .

    $default  reduce using rule 8 (declaration-block)


State 22

   14 declaration: identifier-block COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   13 declaration: identifier-block COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 24

   16 identifier-block: identifier COMMA identifier-block .

    $default  reduce using rule 16 (identifier-block)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional . END_LOCALS BEGIN_BODY statement-block-optional END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   14 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS . BEGIN_BODY statement-block-optional END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   14 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY . statement-block-optional END_BODY

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    $default  reduce using rule 9 (statement-block-optional)

    statement-block-optional  go to state 38
    statement-block           go to state 39
    identifier                go to state 40
    statement                 go to state 41
    read-block                go to state 42
    write-block               go to state 43


State 30

   14 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 31

   20 statement: IF . bool-expr THEN statement-block ENDIF
   21          | IF . bool-expr THEN statement-block ELSE statement-block ENDIF

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 52
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 32

   27 statement: RETURN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 61
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 33

   22 statement: WHILE . bool-expr BEGINLOOP statement-block ENDLOOP

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 62
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 34

   23 statement: DO . BEGINLOOP statement-block ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 63


State 35

   26 statement: BREAK .

    $default  reduce using rule 26 (statement)


State 36

   28 read-block: READ . IDENT
   29           | READ . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 64


State 37

   32 write-block: WRITE . IDENT
   33            | WRITE . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 65


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional . END_BODY

    END_BODY  shift, and go to state 66


State 39

   10 statement-block-optional: statement-block .

    $default  reduce using rule 10 (statement-block-optional)


State 40

   18 statement: identifier . ASSIGN expression
   19          | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression

    ASSIGN            shift, and go to state 67
    L_SQUARE_BRACKET  shift, and go to state 68


State 41

   11 statement-block: statement . SEMICOLON
   12                | statement . SEMICOLON statement-block

    SEMICOLON  shift, and go to state 69


State 42

   24 statement: read-block .
   30 read-block: read-block . IDENT
   31           | read-block . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 70

    $default  reduce using rule 24 (statement)


State 43

   25 statement: write-block .
   34 write-block: write-block . IDENT
   35            | write-block . IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT  shift, and go to state 71

    $default  reduce using rule 25 (statement)


State 44

   14 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   45 relation-expr-body: L_PAREN . bool-expr R_PAREN
   65 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 73
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 74
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 46

   43 relation-expr-body: TRUE .

    $default  reduce using rule 43 (relation-expr-body)


State 47

   44 relation-expr-body: FALSE .

    $default  reduce using rule 44 (relation-expr-body)


State 48

   41 relation-expr: NOT . relation-expr-body

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    relation-expr-body   go to state 75
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 49

   61 term: IDENT . L_PAREN function-args R_PAREN
   63 term-body: IDENT .
   64          | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 63 (term-body)


State 50

   62 term-body: NUMBER .

    $default  reduce using rule 62 (term-body)


State 51

   60 term: MINUS . term-body

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 78
    NUMBER   shift, and go to state 50

    term-body  go to state 79


State 52

   20 statement: IF bool-expr . THEN statement-block ENDIF
   21          | IF bool-expr . THEN statement-block ELSE statement-block ENDIF

    THEN  shift, and go to state 80


State 53

   36 bool-expr: relation-and-expr .
   37          | relation-and-expr . OR bool-expr

    OR  shift, and go to state 81

    $default  reduce using rule 36 (bool-expr)


State 54

   38 relation-and-expr: relation-expr .
   39                  | relation-expr . AND relation-and-expr

    AND  shift, and go to state 82

    $default  reduce using rule 38 (relation-and-expr)


State 55

   40 relation-expr: relation-expr-body .

    $default  reduce using rule 40 (relation-expr)


State 56

   42 relation-expr-body: expression . comp expression

    LTE  shift, and go to state 83
    GTE  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88

    comp  go to state 89


State 57

   52 expression: multiplicative-expr .
   53           | multiplicative-expr . ADD expression
   54           | multiplicative-expr . SUB expression

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 52 (expression)


State 58

   55 multiplicative-expr: term .
   56                    | term . MULT multiplicative-expr
   57                    | term . DIV multiplicative-expr
   58                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 55 (multiplicative-expr)


State 59

   59 term: term-body .

    $default  reduce using rule 59 (term)


State 60

   65 term-body: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 95
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 61

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 62

   22 statement: WHILE bool-expr . BEGINLOOP statement-block ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 63

   23 statement: DO BEGINLOOP . statement-block ENDLOOP WHILE bool-expr

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    statement-block  go to state 97
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 64

   28 read-block: READ IDENT .
   29           | READ IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 98

    $default  reduce using rule 28 (read-block)


State 65

   32 write-block: WRITE IDENT .
   33            | WRITE IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 99

    $default  reduce using rule 32 (write-block)


State 66

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration-block-optional END_PARAMS BEGIN_LOCALS declaration-block-optional END_LOCALS BEGIN_BODY statement-block-optional END_BODY .

    $default  reduce using rule 4 (function)


State 67

   18 statement: identifier ASSIGN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 100
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 68

   19 statement: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 101
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 69

   11 statement-block: statement SEMICOLON .
   12                | statement SEMICOLON . statement-block

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    $default  reduce using rule 11 (statement-block)

    statement-block  go to state 102
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 70

   30 read-block: read-block IDENT .
   31           | read-block IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 103

    $default  reduce using rule 30 (read-block)


State 71

   34 write-block: write-block IDENT .
   35            | write-block IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 104

    $default  reduce using rule 34 (write-block)


State 72

   14 declaration: identifier-block COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declaration)


State 73

   45 relation-expr-body: L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 105


State 74

   42 relation-expr-body: expression . comp expression
   65 term-body: L_PAREN expression . R_PAREN

    LTE      shift, and go to state 83
    GTE      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    R_PAREN  shift, and go to state 106

    comp  go to state 89


State 75

   41 relation-expr: NOT relation-expr-body .

    $default  reduce using rule 41 (relation-expr)


State 76

   61 term: IDENT L_PAREN . function-args R_PAREN

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 107
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    function-args        go to state 108


State 77

   64 term-body: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 109
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 78

   63 term-body: IDENT .
   64          | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 63 (term-body)


State 79

   60 term: MINUS term-body .

    $default  reduce using rule 60 (term)


State 80

   20 statement: IF bool-expr THEN . statement-block ENDIF
   21          | IF bool-expr THEN . statement-block ELSE statement-block ENDIF

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    statement-block  go to state 110
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 81

   37 bool-expr: relation-and-expr OR . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 111
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 82

   39 relation-and-expr: relation-expr AND . relation-and-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    relation-and-expr    go to state 112
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 83

   50 comp: LTE .

    $default  reduce using rule 50 (comp)


State 84

   51 comp: GTE .

    $default  reduce using rule 51 (comp)


State 85

   48 comp: LT .

    $default  reduce using rule 48 (comp)


State 86

   49 comp: GT .

    $default  reduce using rule 49 (comp)


State 87

   46 comp: EQ .

    $default  reduce using rule 46 (comp)


State 88

   47 comp: NEQ .

    $default  reduce using rule 47 (comp)


State 89

   42 relation-expr-body: expression comp . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 113
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 90

   54 expression: multiplicative-expr SUB . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 114
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 91

   53 expression: multiplicative-expr ADD . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 115
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 92

   56 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 116
    term                 go to state 58
    term-body            go to state 59


State 93

   57 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 117
    term                 go to state 58
    term-body            go to state 59


State 94

   58 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    multiplicative-expr  go to state 118
    term                 go to state 58
    term-body            go to state 59


State 95

   65 term-body: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 106


State 96

   22 statement: WHILE bool-expr BEGINLOOP . statement-block ENDLOOP

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    statement-block  go to state 119
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 97

   23 statement: DO BEGINLOOP statement-block . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 120


State 98

   29 read-block: READ IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 121
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 99

   33 write-block: WRITE IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 122
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 100

   18 statement: identifier ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 101

   19 statement: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 123


State 102

   12 statement-block: statement SEMICOLON statement-block .

    $default  reduce using rule 12 (statement-block)


State 103

   31 read-block: read-block IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 124
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 104

   35 write-block: write-block IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 125
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 105

   45 relation-expr-body: L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 45 (relation-expr-body)


State 106

   65 term-body: L_PAREN expression R_PAREN .

    $default  reduce using rule 65 (term-body)


State 107

   66 function-args: expression .
   67              | expression . COMMA function-args

    COMMA  shift, and go to state 126

    $default  reduce using rule 66 (function-args)


State 108

   61 term: IDENT L_PAREN function-args . R_PAREN

    R_PAREN  shift, and go to state 127


State 109

   64 term-body: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 110

   20 statement: IF bool-expr THEN statement-block . ENDIF
   21          | IF bool-expr THEN statement-block . ELSE statement-block ENDIF

    ELSE   shift, and go to state 129
    ENDIF  shift, and go to state 130


State 111

   37 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 37 (bool-expr)


State 112

   39 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 39 (relation-and-expr)


State 113

   42 relation-expr-body: expression comp expression .

    $default  reduce using rule 42 (relation-expr-body)


State 114

   54 expression: multiplicative-expr SUB expression .

    $default  reduce using rule 54 (expression)


State 115

   53 expression: multiplicative-expr ADD expression .

    $default  reduce using rule 53 (expression)


State 116

   56 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 56 (multiplicative-expr)


State 117

   57 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 57 (multiplicative-expr)


State 118

   58 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 58 (multiplicative-expr)


State 119

   22 statement: WHILE bool-expr BEGINLOOP statement-block . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 120

   23 statement: DO BEGINLOOP statement-block ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 132


State 121

   29 read-block: READ IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 133


State 122

   33 write-block: WRITE IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 134


State 123

   19 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 135


State 124

   31 read-block: read-block IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 136


State 125

   35 write-block: write-block IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 137


State 126

   67 function-args: expression COMMA . function-args

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 107
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59
    function-args        go to state 138


State 127

   61 term: IDENT L_PAREN function-args R_PAREN .

    $default  reduce using rule 61 (term)


State 128

   64 term-body: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (term-body)


State 129

   21 statement: IF bool-expr THEN statement-block ELSE . statement-block ENDIF

    IF      shift, and go to state 31
    RETURN  shift, and go to state 32
    WHILE   shift, and go to state 33
    DO      shift, and go to state 34
    BREAK   shift, and go to state 35
    READ    shift, and go to state 36
    WRITE   shift, and go to state 37
    IDENT   shift, and go to state 10

    statement-block  go to state 139
    identifier       go to state 40
    statement        go to state 41
    read-block       go to state 42
    write-block      go to state 43


State 130

   20 statement: IF bool-expr THEN statement-block ENDIF .

    $default  reduce using rule 20 (statement)


State 131

   22 statement: WHILE bool-expr BEGINLOOP statement-block ENDLOOP .

    $default  reduce using rule 22 (statement)


State 132

   23 statement: DO BEGINLOOP statement-block ENDLOOP WHILE . bool-expr

    L_PAREN  shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    NOT      shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    bool-expr            go to state 140
    relation-and-expr    go to state 53
    relation-expr        go to state 54
    relation-expr-body   go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 133

   29 read-block: READ IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 29 (read-block)


State 134

   33 write-block: WRITE IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 33 (write-block)


State 135

   19 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50
    MINUS    shift, and go to state 51

    expression           go to state 141
    multiplicative-expr  go to state 57
    term                 go to state 58
    term-body            go to state 59


State 136

   31 read-block: read-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 31 (read-block)


State 137

   35 write-block: write-block IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 35 (write-block)


State 138

   67 function-args: expression COMMA function-args .

    $default  reduce using rule 67 (function-args)


State 139

   21 statement: IF bool-expr THEN statement-block ELSE statement-block . ENDIF

    ENDIF  shift, and go to state 142


State 140

   23 statement: DO BEGINLOOP statement-block ENDLOOP WHILE bool-expr .

    $default  reduce using rule 23 (statement)


State 141

   19 statement: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 19 (statement)


State 142

   21 statement: IF bool-expr THEN statement-block ELSE statement-block ENDIF .

    $default  reduce using rule 21 (statement)
